data1=census2data(census.data,mode=1)
nrow(data1)
str(data1)
data2=census2data(census.data,mode=2)
nrow(data2)
str(data2)
ggplot(data1,aes(map_id=code,fill=총인구))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data3,aes(map_id=code,fill=총인구))+geom_map(map=kormap3,colour="black",size=0.2)+
expand_limits(x=kormap3$long,y=kormap3$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
library(ggplot2)
=
=
=
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
library(moonBook2)
data1
ggChoropleth(data1,kormap1)
ggChoropleth(data1,kormap1,interactive=TRUE)
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_map()+
theme(legend.text=element_text(family="NanumGothic"))
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
saveRDS(data1,"korpop2014_1.RDS")
saveRDS(data2,"korpop2014_2.RDS")
data1
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",subarea="전라,광주",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",subarea="전라,광주",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
library(maptools)
library(ggplot2)
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
require(tmap)
install.packages("tmap")
qtm(kormap1)
require(tmap)
qtm(kormap1)
require(rgdal)
crsTMcenter<-CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs")
crsWGS84lonlat<-CRS("+proj=longlat +zone=52 +ellps=WGS84 +datum=WGS84 +units=m +no_defs +lat_0=38N +lon_0=127E")
kormap11=spTransform(kormap1,crsTMcenter)
kormap11=shape2map("data/level1.shp",mode=2)
source('~/ownCloud/Documents/kormaps2014/Shape.R', echo=TRUE)
kormap11=shape2map("data/level1.shp",mode=2)
qtm(kormap11)
kormap11=shape2map("shape/level1.shp",mode=2)
qtm(kormap11)
kormap11=shape2map("행정구역지도2014/level1.shp",mode=2)
qtm(kormap11)
kormap11=shape2map("행정구역지도2014/level1.shp",mode=1)
qtm(kormap11)
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
colnames(census.data)
nrow(census.data)
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
nrow(census.data)
data3=census2data(census.data,mode=3)
nrow(data3)
str(data3)
ggChoropleth(data3,kormap3,tooltip="행정구역별",interactive=TRUE)
library(ggplot2)
library(moonBook2)
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data3,kormap3,tooltip="행정구역별",interactive=TRUE)
saveRDS(data2,"korpop2014_3.RDS")
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data1=census2data(census.data,mode=1)
nrow(data1)
str(data1)
data2=census2data(census.data,mode=2)
nrow(data2)
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data1=census2data(census.data,mode=1)
nrow(data1)
str(data1)
data2=census2data(census.data,mode=2)
nrow(data2)
str(data2)
data3=census2data(census.data,mode=3)
nrow(data3)
str(data3)
census2data=function(census.data,mode=1){
data=NULL
if(is.numeric(mode) & (mode>0) & (mode<4)) {
names(census.data)<-gsub("[[:punct:]]+","_",gsub("[[:punct:]]$","",names(census.data)))
census.data$C행정구역별<-sub("^\\'","",census.data$C행정구역별)
if(mode==1) data<-subset(census.data,nchar(C행정구역별)==2 & C행정구역별>10)
else if(mode==2) {
data<-subset(census.data,nchar(C행정구역별)==5)
data<-subset(data,C행정구역별 %!in% c(" 동부", " 읍부", " 면부"))
}
else if(mode==3) data<-subset(census.data,nchar(C행정구역별)>=7)
}
data$code=data$C행정구역별
data
}
data2=census2data(census.data,mode=2)
nrow(data2)
str(data2)
data3=census2data(census.data,mode=3)
nrow(data3)
str(data3)
saveRDS(data1,"korpop2015_1.RDS")
saveRDS(data2,"korpop2015_2.RDS")
saveRDS(data2,"korpop2015_3.RDS")
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data3=census2data(census.data,mode=3)
nrow(data3)
saveRDS(data3,"korpop2015_3.RDS")
library(kormaps2014)
library(kormaps2014)
library(kormaps2014)
kormap1
head(korpop2015_1)
devtools::document()
library(kormaps2014)
library(kormaps2014)
devtools::document()
library(kormaps2014)
load("~/ownCloud/Documents/kormaps2014/data/areacode.rda")
areacode
escape_unicode_data=function(data,change.colnames=TRUE,cols=c(2)){
if(change.colnames){
colnames(data)=stringi::stri_escape_unicode(colnames(data))
}
for(i in 1:length(cols)){
data[[cols[i]]]=stringi::stri_escape_unicode(data[[cols[i]]])
}
data
}
areacode1=escape_unicode_data(areacode,FALSE,cols=2:3)
areacode1
require(ggplot2)
require(moonBook2)
ggChoropleth(areacode,kormap1)
ggChoropleth(areacode,kormap1,"name")
ggChoropleth(areacode,kormap1,"name",interactive=TRUE)
ggChoropleth(areacode,kormap1,"name",interactive=TRUE,tooltip="name")
ggChoropleth(areacode,kormap1,"name",interactive=TRUE)
str(kormap1)
ggChoropleth
map<-kormap1
p<-ggplot(data=areacode,aes(map_id=code,fill=name))+
expand_limits(x=map$long,y=map$lat)+coord_map()+
geom_map(map=map,colour='black',size=0.1)
p
ggChoropleth(areacode1,kormap1,"name",interactive=TRUE)
escape_unicode_data=function(data,change.colnames=TRUE,cols=NULL){
if(change.colnames){
colnames(data)=stringi::stri_escape_unicode(colnames(data))
}
if(is.null(cols)) cols=1:ncol(data)
for(i in 1:length(cols)){
data[[cols[i]]]=stringi::stri_escape_unicode(data[[cols[i]]])
}
data
}
areacode
areacode1=escape_unicode_data(areacode)
areacode1
unescape_unicode_data=function(data,change.colnames=TRUE,cols=NULL){
if(change.colnames){
colnames(data)=stringi::stri_unescape_unicode(colnames(data))
}
if(is.null(cols)) cols=1:ncol(data)
for(i in 1:length(cols)){
data[[cols[i]]]=stringi::stri_unescape_unicode(data[[cols[i]]])
}
data
}
areacode
areacode1=escape_unicode_data(areacode)
areacode1
areacode2=unescape_unicode_data(areacode1)
areacode2
ggChoropleth(areacode2,kormap1,"name",interactive=TRUE)
ggChoropleth(areacode2,kormap1,"name")
theme_set(theme_gray(base_family="NanumGothic"))
ggChoropleth(areacode2,kormap1,"name")
ggChoropleth(areacode2,kormap1,"name",interactive=TRUE)
areacode2
areacode
areacode1=escape_unicode_data(areacode)
areacode1
ggChoropleth(areacode1,kormap1,"name")
ggChoropleth(areacode1,kormap1,"name",interactive=TRUE)
ggChoropleth(areacode1,kormap1,"name")
ggChoropleth(areacode1,kormap1,"name",interactive=TRUE)
ggChoropleth(areacode2,kormap1,"name")
ggChoropleth(areacode2,kormap1,"name",interactive=TRUE)
korpop2015_3new=escape_unicode_data(korpop2015_3)
str(korpop2015_3new)
kormap3new=escape_unicode_data(kormap3)
str(kormap3)
kormap3=kormap3[-c(11,13)]
str(kormap3)
kormap3new=escape_unicode_data(kormap3)
str(kormap3new)
kormap3new2=unescape_unicode_data(kormap3new)
str(kormap3new2)
str(kormap3new)
areacode1
kormap3=escape_unicode_data(kormap3)
str(kormap2)
kormap2=kormap2[-c(11,13)]
kormap2
str(kormap2)
kormap2=escape_unicode_data(kormap2)
str(kormap1)
kormap1=kormap1[-c(10,13)]
kormap1
str(kormap1)
kormap1=escape_unicode_data(kormap1)
korpop2015_3=escape_unicode_data(korpop2015_3)
korpop2015_2=escape_unicode_data(korpop2015_2)
korpop2015_1=escape_unicode_data(korpop2015_1)
areacode
areacode=escape_unicode_data(areacode)
areacode
str(kormap1)
str(korpop2015_1)
str(korpop2015_2)
str(korpop2015_3)
devtools::use_data(areacode,overwrite=TRUE)
devtools::use_data(kormap1,overwrite=TRUE)
devtools::use_data(kormap2,overwrite=TRUE)
devtools::use_data(kormap3,overwrite=TRUE)
devtools::use_data(korpop2015_1,overwrite=TRUE)
devtools::use_data(korpop2015_2,overwrite=TRUE)
devtools::use_data(korpop2015_3,overwrite=TRUE)
areacode
str(kormap1)
str(kormap2)
str(kormap3)
str(korpop2015_1)
str(korpop2015_2)
str(korpop2015_3)
unescape_all=function(){
areacode=unescape_unicode_data(areacode)
kormap1=unescape_unicode_data(kormap1)
kormap2=unescape_unicode_data(kormap2)
kormap3=unescape_unicode_data(kormap3)
korpop2015_1=unescape_unicode_data(korpop2015_1)
korpop2015_2=unescape_unicode_data(korpop2015_2)
korpop2015_3=unescape_unicode_data(korpop2015_3)
}
library(kormaps2014)
areacode
source('~/ownCloud/Documents/kormaps2014/R/areacode.R', echo=TRUE)
library(kormaps2014)
library(kormaps2014)
areacode
str(areacode)
areacode
library(kormaps2014)
library(kormaps2014)
areacode
library(kormaps2014)
unescape_all()
str(areacode)
str(areacode)
source('~/ownCloud/Documents/kormaps2014/R/areacode.R', echo=TRUE)
library(kormaps2014)
library(kormaps2014)
library(kormaps2014)
areacode
str(areacode)
library(kormaps2014)
library(kormaps2014)
areacode
areacode=unescape_unicode_data(areacode)
library(kormaps2014)
library(kormaps2014)
areacode
library(kormaps2014)
areacode
library(kormaps2014)
areacode
str(kormap1)
str(kormap2)
str(kormap3)
View(kormap)
library(kormaps2014)
str(kormap3)
str(kormap1)
str(kormap2)
str(areacode)
library(kormaps2014)
str(korpop2105_1)
str(korpop2015_1)
library(kormaps2014)
str(korpop2015_2)
library(kormaps2014)
str(korpop2015_3)
areacode
str(kormap1)
str(kormap2)
str(kormap3)
library(kormaps2014)
devtools::document()
source('~/ownCloud/Documents/kormaps2014/R/areacode.R', echo=TRUE)
library(kormaps2014)
library(kormaps2014)
areacode
str(kormap1)
library(kormaps2014)
require(moonBook2)
ggChoropleth(areacode,kormap1,"code")
require(ggplot2)
ggChoropleth(areacode,kormap1,"code")
ggChoropleth(areacode,kormap1,fillvar="code")
areacode
kormap1
ggChoropleth(areacode,kormap1,fillvar="code")
ggChoropleth(korpop2015_1,kormap1)
unescape_all=function(){
areacode<<-unescape_unicode_data(areacode)
kormap1<<-unescape_unicode_data(kormap1)
kormap2<<-unescape_unicode_data(kormap2)
kormap3<<-unescape_unicode_data(kormap3)
korpop2015_1<<-unescape_unicode_data(korpop2015_1)
korpop2015_2<<-unescape_unicode_data(korpop2015_2)
korpop2015_3<<-unescape_unicode_data(korpop2015_3)
}
unescape_all()
unescape_unicode_data=function(data,change.colnames=TRUE,cols=NULL){
if(change.colnames){
colnames(data)=stringi::stri_unescape_unicode(colnames(data))
}
if(is.null(cols)) cols=1:ncol(data)
for(i in 1:length(cols)){
data[[cols[i]]]=stringi::stri_unescape_unicode(data[[cols[i]]])
}
data
}
unescape_all()
library(kormaps2014)
ggChoropleth(korpop2015_1,kormap1)
areacode
devtools::use_data(areacode,overwrite=TRUE)
devtools::use_data(kormap1,overwrite=TRUE)
devtools::use_data(kormap2,overwrite=TRUE)
devtools::use_data(kormap3,overwrite=TRUE)
devtools::use_data(korpop2015_1,overwrite=TRUE)
devtools::use_data(korpop2015_2,overwrite=TRUE)
devtools::use_data(korpop2015_3,overwrite=TRUE)
library(kormaps2014)
areacode
str(kormap1)
library(kormaps2014)
library(kormaps2014)
areacode
ggChoropleth(areacode,kormaps1,fillvar="code")
ggChoropleth(areacode,kormap1,fillvar="code")
install_github("cardiomoon/moonBook2")
devtools::install_github("cardiomoon/moonBook2")
ggChoropleth(areacode,kormap1,fillvar="code")
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
require(ggplot2)
states_map <- map_data("state")
ggChoropleth(crimes,states_map,fill="Murder",map_id="state",tooltip="state",interactive=TRUE)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
require(ggplot2)
states_map <- map_data("state")
ggChoropleth(crimes,states_map,fill="Murder",map_id="state",tooltip="state")
area=read.csv("areacode.csv")
area
colnames(area)=c("code","name","name1")
area
map=readRDS("kormap1.RDS")
str(map)
require(ggplt2)
require(ggplot2)
require(moonBook2)
ggChoropleth(area,map,fillvar="code")
ggChoropleth(area,map,fillvar="code",interactive=TRUE)
areacode=area
kormap1=readRDS("kormap1.RDS")
kormap2=readRDS("kormap1.RDS")
kormap3=readRDS("kormap1.RDS")
korpop2=readRDS("korpop2015_2.RDS")
korpop3=readRDS("korpop2015_3.RDS")
korpop1=readRDS("korpop2015_1.RDS")
devtools::use_data(areacode,overwrite=TRUE)
devtools::use_data(kormap1,overwrite=TRUE)
devtools::use_data(kormap2,overwrite=TRUE)
devtools::use_data(kormap3,overwrite=TRUE)
devtools::use_data(korpop2015_1,overwrite=TRUE)
devtools::use_data(korpop2015_2,overwrite=TRUE)
devtools::use_data(korpop1,overwrite=TRUE)
devtools::use_data(korpop2,overwrite=TRUE)
devtools::use_data(korpop3,overwrite=TRUE)
library(kormaps2014)
ggChoropleth(areacode,kormap1,fill="code")
ggChoropleth(areacode,kormap1,fill="code",interactive=TRUE)
ggChoropleth(korpop1,kormap1,fill="code",interactive=TRUE)
ggChoropleth(korpop1,kormap1,fill="총인구_명",interactive=TRUE)
devtools::document()
library(kormaps2014)
devtools::document()
library(kormaps2014)
ggChoropleth(korpop1,kormap1,"총인구_명")
devtools::install_github("cardiomoon/kormaps2014")
ggChoropleth(korpop1,kormap1,"총인구_명")
areacode
areacode1=changeCode(areacode)
areacode1
Encoding(areacode1)<-"CP949"
Encoding(areacode1)
tbc=read.csv("tbc.csv",encoding="euc-kr",skip=2)
tbc=read.csv("tbc.csv")
tbc=read.csv("tbc.csv",fileEncoding = "euc-kr",skip=2)
tbc
tbc=read.csv("tbc.csv",fileEncoding = "euc-kr")
tbc
tbc[1]
tbc[2]
tbc[3]
tbc[4]
tbc=tbc[-c(2,3)]
tbc
tbc=tbc[-17]
tbc
tbc
colnames(tbc)<-c("시도별",2001:2015)
tbc
areacode
tbc=tbc[-1,]
tbc
merge(tbc,areacode,by.x="시도별",by.y="name1")
tbc=merge(tbc,areacode,by.x="시도별",by.y="name1")
tbc
tbclong=melt(tbc,id=c("시도별","code","name"))
tbclong=plyr::melt(tbc,id=c("시도별","code","name"))
tbclong=reshape::melt(tbc,id=c("시도별","code","name"))
require(reshape)
tbclong=melt(tbc,id=c("시도별","code","name"))
str(tbclong)
colnames(tbclong)[4]="year"
tbclong
summary(tbclong)
ggChoropleth(tbclong[tbclong$year %in% c(2005,2010,2015),],kormap1,fillvar="value",facetvar="year")
ggChoropleth(tbclong[tbclong$year %in% c(2001,2005,2010,2015),],kormap1,fillvar="value",facetvar="year")
colnames(tbclong)[5]="NewPts"
ggChoropleth(tbclong[tbclong$year %in% c(2001,2005,2010,2015),],kormap1,fillvar="value",facetvar="year")
ggChoropleth(tbclong[tbclong$year %in% c(2001,2005,2010,2015),],kormap1,fillvar="NewPt",facetvar="year")
ggChoropleth(tbclong[tbclong$year %in% c(2001,2005,2010,2015),],kormap1,fillvar="NewPts",facetvar="year")
ggChoropleth(tbclong[tbclong$year %in% c(2001,2005,2010,2015),],kormap1,fillvar="NewPts",facetvar="year",interactive=TRUE)
ggChoropleth(tbclong[tbclong$year %in% c(2001,2005,2010,2015),],kormap1,fillvar="NewPts",facetvar="year",tooltip="시도별",interactive=TRUE)
tbclong
tbc<-tbclong
tbc
colnames(tbc)[1]="name1"
str(tbc)
devtools::use_data(tbc)
devtools::document()
library(kormaps2014)
devtools::install_github("cardiomoon/kormaps2014")
tbc
head(areacode)
areacode
kormap1=readRDS("kormap1.RDS")
kormap2=readRDS("kormap2.RDS")
kormap3=readRDS("kormap3.RDS")
devtools::use_data(kormap1,overwrite=TRUE)
devtools::use_data(kormap2,overwrite=TRUE)
devtools::use_data(kormap3,overwrite=TRUE)
kormap1
str(kormap1)
str(kormap2)
str(kormap3)
library(kormaps2014)
ggChoropleth(korpop3,kormap3,fillvar="주택_계_호",subarea=c("전라","광주"))
ggChoropleth(korpop3,kormap3,fillvar="주택_계_호",subarea=c("전라"))
ggChoropleth(korpop3,kormap3,fillvar="총인구_명",subarea=c("전라"))
ggChoropleth(korpop3,kormap3,fillvar="주택_계_호")
ggChoropleth(korpop3,kormap3,fillvar="총인구_명",subarea=c("전라"))
ggChoropleth(korpop3,kormap3,fillvar="총인구_명",subarea=c("전라","광주"))
