shp=readShapePoly("shape/level1.shp")
library(maptools)
library(ggplot2)
shp=readShapePoly("shape/level1.shp")
map=fortify(shp)
str(map)
p<-ggplot2(map,aes(x=long,y=lat,group=group,fill=id))+geom_polygon()+coord_fixed()
p<-ggplot(map,aes(x=long,y=lat,group=group,fill=id))+geom_polygon()+coord_fixed()
p
shp@data
shp1=readShapePoly("행정구역지도2014/level1.shp")
shp1@data$name
shp1=readShapePoly("행정구역지도2014/bnd_sido_00_2014/BND_SIDO_PG_2014.shp")
shp1@data$name
shp1@data$name=iconv(shp1@data$name,"cp949","utf-8")
str(shp1@data)
shp1@data$name=iconv(shp1@data$SIDO_NM,"cp949","utf-8")
str(shp1@data)
shp2=readShapePoly("shape/level2.shp")
str(shp2@data)
shp2=readShapePoly("행정구역지도2014/level2.shp")
str(shp2@data)
shp2@data$name=iconv(shp2@data$sigungu_nm,"cp949","utf-8")
str(shp2@data)
shp3=readShapePoly("행정구역지도2014/level3.shp")
str(shp3@data)
shp3@data$name=iconv(shp2@data$adm_dr_nm,"cp949","utf-8")
shp3@data$name=iconv(shp3@data$adm_dr_nm,"cp949","utf-8")
str(shp3@data)
shp3@data$name1=shp3@data$adm_dr_nm
str(shp3@data)
shp2@data$name1=shp2@data$sigungu_nm
str(shp2@data)
shp1@data$name1=shp1@data$SIDO_NM
str(shp1@data)
shp@data=shp1@data
shp@data
writePolyShape(shp,"data/level1.shp")
shp=readShapePoly("shape/level2.shp")
shp@data=shp2@data
shp@data
writePolyShape(shp,"data/level2.shp")
shp=readShapePoly("shape/level3.shp")
shp@data=shp3@data
shp@data
writePolyShape(shp,"data/level3.shp")
shp=readShapePoly("data/level1.shp")
shp@data
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fielEncoding="euc-kr")
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
colnames(census.data)
head(census.data)
census2data=function(census.data,mode=1){
data=NULL
if(is.numeric(mode) & (mode>0) & (mode<4)) {
names(census.data)<-gsub("[[:punct:]]+","_",gsub("[[:punct:]]$","",names(census.data)))
census.data$C행정구역별<-sub("^\\'","",census.data$C행정구역별)
if(mode==1) data<-subset(census.data,nchar(C행정구역)==2 & C행정구역별>10)
else if(mode==2) {
data<-subset(census.data,nchar(C행정구역별)==5)
data<-subset(data,행정구역별 %!in% c(" 동부", " 읍부", " 면부"))
}
else if(mode==3) data<-subset(census.data,nchar(C행정구역별)==7)
}
data$code=data$C행정구역별
data
}
data1=census2data(census.data,mode=1)
census2data=function(census.data,mode=1){
data=NULL
if(is.numeric(mode) & (mode>0) & (mode<4)) {
names(census.data)<-gsub("[[:punct:]]+","_",gsub("[[:punct:]]$","",names(census.data)))
census.data$C행정구역별<-sub("^\\'","",census.data$C행정구역별)
if(mode==1) data<-subset(census.data,nchar(C행정구역별)==2 & C행정구역별>10)
else if(mode==2) {
data<-subset(census.data,nchar(C행정구역별)==5)
data<-subset(data,행정구역별 %!in% c(" 동부", " 읍부", " 면부"))
}
else if(mode==3) data<-subset(census.data,nchar(C행정구역별)==7)
}
data$code=data$C행정구역별
data
}
data1=census2data(census.data,mode=1)
data1=census2data(census.data,mode=2)
'%!in%' <- function(x,y)!('%in%'(x,y))
data1=census2data(census.data,mode=2)
data1=census2data(census.data,mode=1)
data2=census2data(census.data,mode=2)
data3=census2data(census.data,mode=3)
nrow(data1)
nrow(data2)
nrow(data3)
data3=census2data(census.data,mode=3)
nrow(data3)
census.data[1:10,1:5]
census.data[1:20,1:5]
census.data[1:30,1:5]
census.data[1:50,1:5]
nrow(data2)
census.data[300:310,1:5]
census.data[350:360,1:5]
nrow(census.data)
require(rgdal)
crsTMcenter<-CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs")
crsWGS84lonlat<-CRS("+proj=longlat +zone=52 +ellps=WGS84 +datum=WGS84 +units=m +no_defs +lat_0=38N +lon_0=127E")
shape2map=function(filename){
shp=readShapePoly(filename,verbose=T, proj4string=crsTMcenter)
#shp1=readShapePoly(filename)
shp1=spTransform(shp,crsWGS84lonlat)
map=fortify(shp1)
shp1@data$id=rownames(shp1@data)
df=merge(map,shp1@data,"id")
df$region=df$code
df
}
kormap1=shape2map("data/level1.shp")
install.packages("rgdal")
require(rgdal)
kormap1=shape2map("data/level1.shp")
kormap2=shape2map("data/level2.shp")
kormap3=shape2map("data/level3.shp")
str(data1)
ggplot(data1,aes(map_id=code,fill="총인구_명"))+geom_map(map=kormap1)
ggplot(data1,aes(map_id=code,fill="총인구_명"))+geom_map(map=kormap1)+expand_limits(x=kormap1$long,y=kormap1$lat)
str(kormap1)
nrow(data1)
str(data1)
str(kormap1)
str(data1)
str(kormap1)
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_fixed()
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_map()
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_map()+
theme(legned.text=element_text(family="NanumGothic"))
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_map()+
theme(legend.text=element_text(family="NanumGothic"))
nrow(data1)
str(data1)
str(data2)
data1
areacode=data1[c(1,2)]
areacode
areacode$sido=c("서울","부산","대구","인천","광주","대전","울산","세종","경기","강원","충북","충남","전북","전남","경북","경남","제주")
areacode
write.csv(areacode,"areacode.csv")
write.csv(areacode,"areacode.csv",row.names = FALSE)
areacode=read.csv("areacode.csv")
areacode
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_map()+
theme(legend.text=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill="총인구_명"))+geom_map(map=kormap1)+expand_limits(x=kormap1$long,y=kormap1$lat)
str(kormap1)
str(data1)
kormap1$region=kormap1$SIDO_CD
str(kormap1)
ggplot(data1,aes(map_id=code,fill="총인구_명"))+geom_map(map=kormap1)+expand_limits(x=kormap1$long,y=kormap1$lat)
ggplot(data1,aes(map_id=code,fill="총인구_명"))+geom_map(map=kormap1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientmn(colours=c("white","orange","red"))
ggplot(data1,aes(map_id=code,fill="총인구_명"))+geom_map(map=kormap1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))
str(data1)
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.text=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black")+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.5)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
str(kormap2)
kormap2$region=kormap2$sigungu_cd
str(kormap2)
str(kormap3)
kormap3$region=kormap3$adm_dr_cd
str(kormap3)
ggplot(data2,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
kormap1
str(kormap1)
saveRDS(kormap1,"kormap1.RDS")
saveRDS(kormap2,"kormap2.RDS")
saveRDS(kormap3,"kormap3.RDS")
saveRDS(kormap3,"kormap3.RDS")
str(kormap3)
popdata=read.csv("pop2016.csv",header=T,skip=2,fileEncoding="euc-kr")
str(popdata)
summary(popdata)
unique(popdata$X5세별)
newdata=popdata[popdata$X5세별=="계",]
str(newdata))
str(newdata)
unique(newdata$시점)
newdata=newdata[newdata$시점==201609,]
str(newdata)
newdata=newdata[c(1,2,6:8)]
str(newdata)
colnames(newdata)=c("C행정구역별","행정구역별","총인구","남자","여자")
str(newdata)
data1=census2data(newdata,1)
nrow(data1)
data2=census2data(newdata,2)
nrow(data2)
data3=census2data(newdata,3)
nrow(data3)
tail(newdata)
kormap3
summary(kormap3)
str(newdata)
census2data=function(census.data,mode=1){
data=NULL
if(is.numeric(mode) & (mode>0) & (mode<4)) {
names(census.data)<-gsub("[[:punct:]]+","_",gsub("[[:punct:]]$","",names(census.data)))
census.data$C행정구역별<-sub("^\\'","",census.data$C행정구역별)
if(mode==1) data<-subset(census.data,nchar(C행정구역별)==2 & C행정구역별>10)
else if(mode==2) {
data<-subset(census.data,nchar(C행정구역별)==5)
data<-subset(data,행정구역별 %!in% c(" 동부", " 읍부", " 면부"))
}
else if(mode==3) data<-subset(census.data,nchar(C행정구역별)>=7)
}
data$code=data$C행정구역별
data
}
data3=census2data(newdata,3)
nrow(data3)
str(data3)
data3$code=substr(data3$code,1,7)
str(data3)
ggplot(data1,aes(map_id=code,fill=총인구))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data3,aes(map_id=code,fill=총인구))+geom_map(map=kormap3,colour="black",size=0.2)+
expand_limits(x=kormap3$long,y=kormap3$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
str(newdata)
data1
areacode
str(newdata)
str(newdata)
data1
popdata=read.csv("pop2016.csv",header=T,skip=2,fileEncoding="euc-kr")
str(popdata)
popdata=popdata[popdata$X5세별=="계",]
data1
data1
areacode
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data1=census2data(census.data,mode=1)
nrow(data1)
str(data1)
data2=census2data(census.data,mode=2)
nrow(data2)
str(data2)
ggplot(data1,aes(map_id=code,fill=총인구))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data3,aes(map_id=code,fill=총인구))+geom_map(map=kormap3,colour="black",size=0.2)+
expand_limits(x=kormap3$long,y=kormap3$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
library(ggplot2)
=
=
=
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
ggplot(data2,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap2,colour="black",size=0.2)+
expand_limits(x=kormap2$long,y=kormap2$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
library(moonBook2)
data1
ggChoropleth(data1,kormap1)
ggChoropleth(data1,kormap1,interactive=TRUE)
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
ggplot(kormap1,aes(x=long,y=lat,group=group,fill=name))+geom_polygon()+coord_map()+
theme(legend.text=element_text(family="NanumGothic"))
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
saveRDS(data1,"korpop2014_1.RDS")
saveRDS(data2,"korpop2014_2.RDS")
data1
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",subarea="전라,광주",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",subarea="전라,광주",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
library(maptools)
library(ggplot2)
ggplot(data1,aes(map_id=code,fill=총인구_명))+geom_map(map=kormap1,colour="black",size=0.2)+
expand_limits(x=kormap1$long,y=kormap1$lat)+coord_map()+
scale_fill_gradientn(colours=c("white","orange","red"))+
theme(legend.title=element_text(family="NanumGothic"))
require(tmap)
install.packages("tmap")
qtm(kormap1)
require(tmap)
qtm(kormap1)
require(rgdal)
crsTMcenter<-CRS("+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs")
crsWGS84lonlat<-CRS("+proj=longlat +zone=52 +ellps=WGS84 +datum=WGS84 +units=m +no_defs +lat_0=38N +lon_0=127E")
kormap11=spTransform(kormap1,crsTMcenter)
kormap11=shape2map("data/level1.shp",mode=2)
source('~/ownCloud/Documents/kormaps2014/Shape.R', echo=TRUE)
kormap11=shape2map("data/level1.shp",mode=2)
qtm(kormap11)
kormap11=shape2map("shape/level1.shp",mode=2)
qtm(kormap11)
kormap11=shape2map("행정구역지도2014/level1.shp",mode=2)
qtm(kormap11)
kormap11=shape2map("행정구역지도2014/level1.shp",mode=1)
qtm(kormap11)
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
colnames(census.data)
nrow(census.data)
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
nrow(census.data)
data3=census2data(census.data,mode=3)
nrow(data3)
str(data3)
ggChoropleth(data3,kormap3,tooltip="행정구역별",interactive=TRUE)
library(ggplot2)
library(moonBook2)
ggChoropleth(data1,kormap1,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data2,kormap2,tooltip="행정구역별",interactive=TRUE)
ggChoropleth(data3,kormap3,tooltip="행정구역별",interactive=TRUE)
saveRDS(data2,"korpop2014_3.RDS")
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data1=census2data(census.data,mode=1)
nrow(data1)
str(data1)
data2=census2data(census.data,mode=2)
nrow(data2)
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data1=census2data(census.data,mode=1)
nrow(data1)
str(data1)
data2=census2data(census.data,mode=2)
nrow(data2)
str(data2)
data3=census2data(census.data,mode=3)
nrow(data3)
str(data3)
census2data=function(census.data,mode=1){
data=NULL
if(is.numeric(mode) & (mode>0) & (mode<4)) {
names(census.data)<-gsub("[[:punct:]]+","_",gsub("[[:punct:]]$","",names(census.data)))
census.data$C행정구역별<-sub("^\\'","",census.data$C행정구역별)
if(mode==1) data<-subset(census.data,nchar(C행정구역별)==2 & C행정구역별>10)
else if(mode==2) {
data<-subset(census.data,nchar(C행정구역별)==5)
data<-subset(data,C행정구역별 %!in% c(" 동부", " 읍부", " 면부"))
}
else if(mode==3) data<-subset(census.data,nchar(C행정구역별)>=7)
}
data$code=data$C행정구역별
data
}
data2=census2data(census.data,mode=2)
nrow(data2)
str(data2)
data3=census2data(census.data,mode=3)
nrow(data3)
str(data3)
saveRDS(data1,"korpop2015_1.RDS")
saveRDS(data2,"korpop2015_2.RDS")
saveRDS(data2,"korpop2015_3.RDS")
census.data=read.csv("101_DT_1IN1502_Y_2015.csv",header=T,skip=2,fileEncoding="euc-kr")
data3=census2data(census.data,mode=3)
nrow(data3)
saveRDS(data3,"korpop2015_3.RDS")
library(kormaps2014)
library(kormaps2014)
